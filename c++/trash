
struct hd2d{
	double fd_cf[5];
	double fd_cf_coo[5];
	//d2x
	double *ad2x=new double[3];
	double bd2x[2];
	double Cad2x[3];
	double Cbd2x[2];
	//d2y
	double ad2y[3];
	double bd2y[2];
	double Cad2y[3];
	double Cbd2y[2];
	
	//d3x
	double ad3x[2];
	double Cad3x[2];
	double bd3x[3];
	double Cbd3x[3];
	
	//d3y
	double ad3y[2];
	double Cad3y[2];
	double bd3y[3];
	double Cbd3y[3];
	//d2xy
	double ad2xy[8];
	double bd2xy[7];
	double *cd2xy = &ad2x[0];
	double Cad2xy[8];
	double Cbd2xy[7];
	double *Ccd2xy=&Cad2x[0];
	
	//dx2y
	double adx2y[8];
	double bdx2y[7];
	double *cdx2y=&ad2y[0];
	double *Cadx2y=&Cad2xy[0];
	double *Cbdx2y=&Cbd2xy[0];
	double *Ccdx2y=&Cad2y[0];
	
	//d4x
	double *ad4x=&ad2x[0];
	double *Cad4x=&Cad2x[0];
	double *bd4x=&bd2x[0];
	double *Cbd4x=&Cbd2x[0];
	
	//d4y
	double *ad4y=&ad2y[0];
	double *Cad4y=&Cad2y[0];
	double *bd4y=&bd2y[0];
	double *Cbd4y=&Cbd2y[0];
	
	//d2x2y
	double d2x2y[9];
	double Cd2x2y[9];
	
	//d5x
	double *ad5x=&ad3x[0];
	double *Cad5x=&Cad3x[0];
	double bd5x[3];
	double *Cbd5x=&Cbd3x[0];
	
	//d5y
	double *ad5y=&ad3y[0];
	double *Cad5y=&Cad3y[0];
	double *bd5y=&bd5x[0];
	double *Cbd5y=&Cbd3y[0];
	
	//d4xy
	double *ad4xy=&ad2xy[0];
	double bd4xy[7];
	double *Cad4xy=&Cad2xy[0];
	double *Cbd4xy=&Cbd2xy[0];
	
	//dx4y
	double *adx4y=&adx2y[0];
	double bdx4y[7];
	double *Cadx4y=&Cadx2y[0];
	double *Cbdx4y=&Cbdx2y[0];
	
	//d3x2y
	double ad3x2y[6];
	double *bd3x2y=&ad2y[0];
	double Cad3x2y[6];
	double *Cbd3x2y=&Cad2y[0];

	//d2x3y
	double ad2x3y[6];
	double *bd2x3y=&ad2x[0];
	double Cad2x3y[6];
	double *Cbd2x3y=&Cad2x[0];
	
	};

hd2d input(double nx){
	hd2d HD;
	
	//Conventional Finite difference
	HD.fd_cf[0]=1;
	HD.fd_cf[1]=1;
	HD.fd_cf[2]=-4;
	HD.fd_cf[3]=1;
	HD.fd_cf[4]=1;
	
	HD.fd_cf_coo[0]=-nx;
	HD.fd_cf_coo[1]=-1;
	HD.fd_cf_coo[2]=0;
	HD.fd_cf_coo[3]=1;
	HD.fd_cf_coo[4]=nx;
	
	//d2x
	HD.ad2x[0]=1;
	HD.ad2x[1]=-2;
	HD.ad2x[2]=1;
	HD.Cad2x[0]=-1;
	HD.Cad2x[1]=0;
	HD.Cad2x[2]=1;
	
	HD.bd2x[0]=-1;
	HD.bd2x[1]=1;
	HD.Cbd2x[0]=-1;
	HD.Cbd2x[1]=1;
	
	//d2y
	HD.ad2y[0]=1;
	HD.ad2y[1]=-2;
	HD.ad2y[2]=1;
	HD.Cad2y[0]=-nx;
	HD.Cad2y[1]=0;
	HD.Cad2y[2]=nx;
	HD.bd2y[0]=-1;
	HD.bd2y[1]=1;
	HD.Cbd2y[0]=-nx;
	HD.Cbd2y[1]=nx;
	
	//d3x
	HD.ad3x[0]=-1;
	HD.ad3x[1]=1;
	HD.Cad3x[0]=-1;
	HD.Cad3x[1]=1;
	HD.bd3x[0]=1;
	HD.bd3x[1]=8;
	HD.bd3x[2]=1;
	HD.Cbd3x[0]=-1;
	HD.Cbd3x[1]=0;
	HD.Cbd3x[2]=1;
	
	//d3y
	HD.ad3y[0]=-1;
	HD.ad3y[1]=1;
	HD.Cad3y[0]=-nx;
	HD.Cad3y[1]=nx;
	HD.bd3y[0]=1;
	HD.bd3y[1]=8;
	HD.bd3y[2]=1;
	HD.Cbd3y[0]=-nx;
	HD.Cbd3y[1]=0;
	HD.Cbd3y[2]=nx;
	
	//d2xy
	HD.ad2xy[0]=-5;
	HD.ad2xy[1]=4;
	HD.ad2xy[2]=1;
	HD.ad2xy[3]=6;
	HD.ad2xy[4]=-6;
	HD.ad2xy[5]=-1;
	HD.ad2xy[6]=-4;
	HD.ad2xy[7]=5;
	//
	HD.bd2xy[0]=-1;
	HD.bd2xy[1]=-2;
	HD.bd2xy[2]=1;
	HD.bd2xy[3]=4;
	HD.bd2xy[4]=1;
	HD.bd2xy[5]=-2;
	HD.bd2xy[6]=-1;
	//

	HD.Cad2xy[0]=-nx-1;
	HD.Cad2xy[1]=-nx;
	HD.Cad2xy[2]=-nx+1;
	HD.Cad2xy[3]=-1;
	HD.Cad2xy[4]=1;
	HD.Cad2xy[5]=nx-1;
	HD.Cad2xy[6]=nx;
	HD.Cad2xy[7]=nx+1;
	//
	HD.Cbd2xy[0]=-nx-1;
	HD.Cbd2xy[1]=-nx;
	HD.Cbd2xy[2]=-1;
	HD.Cbd2xy[3]=0;
	HD.Cbd2xy[4]=1;
	HD.Cbd2xy[5]=nx;
	HD.Cbd2xy[6]=nx+1;
	
	//dx2y
	HD.adx2y[0]=-5;
	HD.adx2y[1]=6;
	HD.adx2y[2]=-1;
	HD.adx2y[3]=4;
	HD.adx2y[4]=-4;
	HD.adx2y[5]=1;
	HD.adx2y[6]=-6;
	HD.adx2y[7]=5;
	//
	HD.bdx2y[0]=-1;
	HD.bdx2y[1]=1;
	HD.bdx2y[2]=-2;
	HD.bdx2y[3]=4;
	HD.bdx2y[4]=-2;
	HD.bdx2y[5]=1;
	HD.bdx2y[6]=-1;
	
	//d2x2y
	HD.d2x2y[0]=1;
	HD.d2x2y[1]=-2;
	HD.d2x2y[2]=1;
	HD.d2x2y[3]=-2;
	HD.d2x2y[4]=4;
	HD.d2x2y[5]=-2;
	HD.d2x2y[6]=1;
	HD.d2x2y[7]=-2;
	HD.d2x2y[8]=1;
	//
	HD.Cd2x2y[0]=-nx-1;
	HD.Cd2x2y[1]=-nx;
	HD.Cd2x2y[2]=-nx+1;
	HD.Cd2x2y[3]=-1;
	HD.Cd2x2y[4]=0;
	HD.Cd2x2y[5]=1;
	HD.Cd2x2y[6]=nx-1;
	HD.Cd2x2y[7]=nx;
	HD.Cd2x2y[8]=nx+1;
	//d5x
	HD.bd5x[0]=1;
	HD.bd5x[1]=4;
	HD.bd5x[2]=1;
	
	//d4xy
	HD.bd4xy[0]=1;
	HD.bd4xy[1]=1;
	HD.bd4xy[2]=-1;
	HD.bd4xy[3]=-2;
	HD.bd4xy[4]=-1;
	HD.bd4xy[5]=1;
	HD.bd4xy[6]=1;
	//
	HD.Cbd4xy[0]=-nx-1;
	HD.Cbd4xy[1]=-nx;
	HD.Cbd4xy[2]=-1;
	HD.Cbd4xy[3]=0;	
	HD.Cbd4xy[4]=1;
	HD.Cbd4xy[5]=nx;
	HD.Cbd4xy[6]=nx+1;
	
	//dx4y
	HD.bdx4y[0]=1;
	HD.bdx4y[1]=-1;
	HD.bdx4y[2]=1;
	HD.bdx4y[3]=-2;
	HD.bdx4y[4]=1;
	HD.bdx4y[5]=-1;
	HD.bdx4y[6]=1;
	
	//d3x2y
	HD.ad3x2y[0]=-1;
	HD.ad3x2y[1]=1;
	HD.ad3x2y[2]=2;
	HD.ad3x2y[3]=-2;
	HD.ad3x2y[4]=-1;
	HD.ad3x2y[5]=1;
	//
	HD.Cad3x2y[0]=-nx-1;
	HD.Cad3x2y[1]=-nx+1;
	HD.Cad3x2y[2]=-1;
	HD.Cad3x2y[3]=1;
	HD.Cad3x2y[4]=nx-1;
	HD.Cad3x2y[5]=nx+1;
	
	//d2x3y
	HD.ad2x3y[0]=-1;
	HD.ad2x3y[1]=2;
	HD.ad2x3y[2]=-1;
	HD.ad2x3y[3]=1;
	HD.ad2x3y[4]=-2;
	HD.ad2x3y[5]=1;
	//
	HD.Cad2x3y[0]=-nx-1;
	HD.Cad2x3y[1]=-nx;
	HD.Cad2x3y[2]=-nx+1;
	HD.Cad2x3y[3]=nx-1;
	HD.Cad2x3y[4]=nx;
	HD.Cad2x3y[5]=nx+1;
	
	return HD;
	}
double **Wve_nadm(int src_loc, double freq,double *Vel_Mod,double h, double dt,int nt,int nx,int ny){
	double **P=alloc_mat(nt,nx*ny);
	double **Px=alloc_mat(nt,nx*ny);
	double **Py=alloc_mat(nt,nx*ny);
	double *CDTH2=cdth2(Vel_Mod,dt,h,nx,ny,1);
	double *CDTH4=cdth4(Vel_Mod,dt,h,nx,ny,1);
	double a[4]= {1,-8,8,-1};
	double b[4]= {-2*nx,-nx,nx,2*nx};
	double c[4]= {1,-8,8,-1};
	double d[4]= {-2,-1,1,2};
	int tprint=nt/10;
	hd2d hd;
	hd = input((double)nx);
	//Time-step loop
	for (int i=1;i<nt-1;i++){if(i%tprint==0){
		std:: cout<<"Computing Wavefield ....."<<std::setprecision(3)<<(float)i/(nt-2)*100<<"%"<<std::endl;}
		double t=i*dt;
		
		if (i<nt){
		for(int j=0;j<nx*ny;j++){
			Px[i][j]=fd_2d(P[i],j,c,d,nx,ny,4);
			Py[i][j]=fd_2d(P[i],j,a,d,nx,ny,4);
			}
			
		for(int j=0;j<nx*ny;j++){
			P[1][j]=P[0][j];
			Px[1][j]=Px[0][j];
			Py[1][j]=Py[0][j];
			}}
		for(int j=0;j<nx*ny;j++){
			/*P Wavefield */
			P[i+1][j]=2.0*P[i][j]-P[i-1][j]+
			CDTH2[j]*
			(/* d2x + d2y*/ 
			/* d2x */
			fd_2d(P[i],j,hd.ad2x,hd.Cad2x,nx,ny,3)*2.0/h/h-
			fd_2d(Px[i],j,hd.bd2x,hd.Cbd2x,nx,ny,2)/2.0/h+
			
			/* d2y */
			fd_2d(P[i],j,hd.ad2y,hd.Cad2y,nx,ny,3)*2.0/h/h-
			fd_2d(Py[i],j,hd.bd2y,hd.Cbd2y,nx,ny,2)/2.0/h/h
			)+
			CDTH4[j]/12.0*
			
			(/* d4x + d4y + 2*d2x2y */
			/* d4x */
			fd_2d(P[i],j,hd.ad4x,hd.Cad4x,nx,ny,3)*(-12.0)/h/h/h/h +
			fd_2d(Px[i],j,hd.bd4x,hd.Cbd4x,nx,ny,2)*(6.0)/h/h/h +
			
			/* d4y */
			fd_2d(P[i],j,hd.ad4y,hd.Cad4y,nx,ny,3)*(-12.0)/h/h/h/h +
			fd_2d(Py[i],j,hd.bd4y,hd.Cbd4y,nx,ny,2)*(6.0)/h/h/h +
			
			/* 2*d2x2y */2.0*(
			fd_2d(P[i],j,hd.d2x2y,hd.Cd2x2y,nx,ny,9)/h/h/h/h)
			);
			/* Px Wavefield */
			Px[i+1][j]=2.0*Px[i][j]-Px[i-1][j]+
			CDTH2[j]*
			(/* d3x + d2yx*/ 
			/* d3x */
			fd_2d(P[i],j,hd.ad3x,hd.Cad3x,nx,ny,2)*15.0/2.0/h/h/h+
			fd_2d(Px[i],j,hd.bd3x,hd.Cbd3x,nx,ny,3)*-3.0/2.0/h/h+
			/* dx2y */
			fd_2d(P[i],j,hd.adx2y,hd.Cadx2y,nx,ny,8)/4.0/h/h/h+
			fd_2d(Py[i],j,hd.bdx2y,hd.Cbdx2y,nx,ny,7)/2.0/h/h+
			fd_2d(Px[i],j,hd.cdx2y,hd.Ccdx2y,nx,ny,3)/h/h
			)+
			CDTH4[j]/12.0*
			(/* d5x + d4yx + 2*d3x2y */
			/* d5x */
			fd_2d(P[i],j,hd.ad5x,hd.Cad5x,nx,ny,2)*-90.0/h/h/h/h/h+
			fd_2d(Px[i],j,hd.bd5x,hd.Cbd5x,nx,ny,3)*30.0/h/h/h/h+
			
			/* dx4y */
			fd_2d(P[i],j,hd.adx4y,hd.Cadx4y,nx,ny,8)*-3.0/h/h/h/h/h+
			fd_2d(Py[i],j,hd.bdx4y,hd.Cbdx4y,nx,ny,7)*6.0/h/h/h/h+
			
			/* 2*d3x2y */2.0*(
			fd_2d(P[i],j,hd.ad3x2y,hd.Cad3x2y,nx,ny,6)*3.0/h/h/h/h/h+
			fd_2d(Px[i],j,hd.bd3x2y,hd.Cbd3x2y,nx,ny,3)*-6.0/h/h/h/h)
			);
			
			/* Py Wavefield */
			Py[i+1][j]=2.0*Py[i][j]-Py[i-1][j]+
			CDTH2[j]*
			(/* d2xy + d3y*/ 
			/* d2xy */
			fd_2d(P[i],j,hd.ad2xy,hd.Cad2xy,nx,ny,8)/4.0/h/h/h+
			fd_2d(Px[i],j,hd.bd2xy,hd.Cbd2xy,nx,ny,7)/2.0/h/h+
			fd_2d(Py[i],j,hd.cd2xy,hd.Ccd2xy,nx,ny,3)/h/h+
			
			/* d3y */
			fd_2d(P[i],j,hd.ad3y,hd.Cad3y,nx,ny,2)*15.0/2.0/h/h/h+
			fd_2d(Py[i],j,hd.bd3y,hd.Cbd3y,nx,ny,3)*-3.0/2.0/h/h
			
			)+
			CDTH4[j]/12.0*
			(/* d4xy + d5y + 2*d2x3y */
			/* d4xy */
			fd_2d(P[i],j,hd.ad4xy,hd.Cad4xy,nx,ny,8)*-3.0/h/h/h/h/h+
			fd_2d(Px[i],j,hd.bd4xy,hd.Cbd4xy,nx,ny,7)*6.0/h/h/h/h+
			
			/* d5y */
			fd_2d(P[i],j,hd.ad5y,hd.Cad5y,nx,ny,2)*-90.0/h/h/h/h/h+
			fd_2d(Py[i],j,hd.bd5y,hd.Cbd5y,nx,ny,3)*30.0/h/h/h/h+
			
			/* 2*d2x3y */2.0*(
			fd_2d(P[i],j,hd.ad2x3y,hd.Cad2x3y,nx,ny,6)*3.0/h/h/h/h/h+
			fd_2d(Py[i],j,hd.bd2x3y,hd.Cbd2x3y,nx,ny,3)*-6.0/h/h/h/h)
			);
			
		}
		P[i+1][src_loc]+=ricker_wavelet_1(freq,t);
	}
	delete [] CDTH2;
	delete [] CDTH4;
	free_mat_mem(Px);
	free_mat_mem(Py);
	return P;
	}
